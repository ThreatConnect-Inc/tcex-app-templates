[tool.black]
line-length = 100
skip-string-normalization = true

[codespell]
# ignore-words-list=
skip = "*.history,lib_*,local-*"

[tool.pydocstyle]
ignore = [
  "D202", # no blank lines allowed after function docstring
  "D203", # 1 blank line required before class docstring (found 0)
  "D213", # Multi-line docstring summary should start at the second line
  "D400", # First line should end with a period ...
  "D406", # Section name should end with a newline ...
  "D407", # Missing dashed underline after section ...
  "D413", # Missing blank line after last section ...
  "D415", # First line should end with a period, question mark, or exclamation point ...
]

[tool.isort]
dedup_headings = false
import_heading_firstparty = "first-party"
import_heading_stdlib = "standard library"
import_heading_thirdparty = "third-party"
include_trailing_comma = true
known_first_party = ""
known_local_folder = "."
known_third_party = "tcex"
line_length = 100
profile = "black"
skip = ["run_local.py"]

[tool.pylint.master]
init-hook = "import sys;sys.path.insert(0, 'deps')"

[tool.pylint.messages_control]
disable = [
  "broad-except",
  "duplicate-code",
  "fixme",
  "import-error",
  "invalid-name",
  "logging-fstring-interpolation",
  "missing-function-docstring",
  "too-few-public-methods",
  "too-many-ancestors",
  "too-many-arguments",
  "too-many-branches",
  "too-many-instance-attributes",
  "too-many-lines",
  "too-many-locals",
  "too-many-public-methods",
  "too-many-statements",
  "wrong-spelling-in-comment",
  "wrong-import-order",
]
extension-pkg-whitelist = "pydantic"

[tool.pyright]
# https://github.com/microsoft/pyright/blob/main/docs/configuration.md#sample-pyprojecttoml-file
exclude = [
  "**/.history",
  "**/__pycache__",
  "**/deps",
  "**/deps_tests",
  "**/local-*",
  "**/tests",
]
pythonPlatform = "Linux"
pythonVersion = "3.11"
reportPrivateImportUsage = false

[tool.pytest.ini_options]
# standard
addopts = [
  "--tb=short", # Traceback print mode (auto/long/short/line/native/no)
  "--show-capture=no", # no,stdout,stderr,log,all
]

# with xdist
# addopts = [
#   "-n=auto", # pytest-xdist
#   "--tb=short", # Traceback print mode (auto/long/short/line/native/no)
#   "--show-capture=no", # no,stdout,stderr,log,all
# ]

# with coverage
# addopts = [
#   "--tb=short", # Traceback print mode (auto/long/short/line/native/no)
#   "--show-capture=no", # no,stdout,stderr,log,all
#   "--cov=.", # pytest-cov
#   "--cov-report=term-missing", # pytest-cov
# ]
junit_family = "xunit2"
testpaths = [
  "tests",
]
